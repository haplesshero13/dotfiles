#!/usr/bin/env ruby
# assume running from a git repository
# bundles added as submodules in <vim_dir>/bundle

# set repo_dir to your super-repository
repo_dir = File.expand_path("~/.dotfiles")
# set vim_dir to Vim's runtimepath variable
# (usually .vim in your home directory)
vim_dir = "vim"

git_bundles = [ 
    "git://github.com/scrooloose/nerdtree.git",
    "git://github.com/scrooloose/nerdcommenter.git",
    "git://github.com/vim-ruby/vim-ruby.git",
    "git://github.com/mileszs/ack.vim.git",
    "git://git.wincent.com/command-t.git",
    "git://github.com/msanders/snipmate.vim.git",
    "git://github.com/chrismetcalf/vim-yankring.git",
    "git://github.com/thinca/vim-guicolorscheme.git",
    "git://github.com/vim-scripts/TVO--The-Vim-Outliner.git",
]

vim_org_scripts = [
    ["IndexedSearch", "7062",  "plugin"],
]

require 'fileutils'
require 'open-uri'

FileUtils.cd(repo_dir)
bundles_dir = File.join(vim_dir, "bundle")

need_init = false

git_bundles.each do |url|
    dir = url.split('/').last.sub(/\.git$/, '')
    
    # if plugin hasn't been added as a submodule
    unless system("grep -q \"#{url}\" \"#{repo_dir}/.gitmodules\"")
        puts "  adding #{url} as submodule..."
        `git submodule add #{url} "#{bundles_dir}/#{dir}"`
    end

    # if submodule hasn't been initialized
    need_init = true unless system("grep -q \"#{url}\" \"#{repo_dir}/.git/config\"")
end
if need_init
    puts " initializing new submodules"
    `git submodule init`
end

puts " Updating submodule bundles..."
`git submodule update`

FileUtils.cd(bundles_dir)

vim_org_scripts.each do |name, script_id, script_type|
    puts "  Downloading #{name}"
    local_file = File.join(name, script_type, "#{name}.vim")
    FileUtils.mkdir_p(File.dirname(local_file))
    File.open(local_file, "w") do |file|
        file << open("http://www.vim.org/scripts/download_script.php?src_id=#{script_id}").read
    end
end

puts " Updating bundle help tags..."
`vim -e -c "call pathogen#helptags()" -c q`
