#!/usr/bin/env ruby
# assume running from a git repository
# bundles added as submodules in <vim_dir>/bundle

# set repo_dir to your super-repository
repo_dir = File.expand_path("~/.dotfiles")
# set vim_dir to Vim's runtimepath variable
# (usually .vim in your home directory)
vim_dir = "vim"

git_bundles = [ 
#    "git://github.com/tomtom/tlib_vim.git",
    "git://github.com/scrooloose/nerdtree.git",
    "git://github.com/scrooloose/nerdcommenter.git",
    "git://github.com/vim-ruby/vim-ruby.git",
    "git://github.com/mileszs/ack.vim.git",
    "git://git.wincent.com/command-t.git",
    "git://github.com/msanders/snipmate.vim.git",
    "git://github.com/chrismetcalf/vim-yankring.git",
    "git://github.com/vim-scripts/IndexedSearch.git",
#    "git://github.com/thinca/vim-guicolorscheme.git",
#    "git://github.com/steeef/TVO--The-Vim-Outliner.git",
#    "git://github.com/tomtom/viki_vim.git",
]

require 'fileutils'
require 'open-uri'

FileUtils.cd(repo_dir)
bundles_dir = File.join(vim_dir, "bundle")

need_init = false

git_bundles.each do |url|
    dir = url.split('/').last.sub(/\.git$/, '')

    # if plugin hasn't been added as a submodule
    unless system("grep -q \"#{url}\" \"#{repo_dir}/.gitmodules\"")
        puts "  adding #{url} as submodule..."
        `git submodule add #{url} "#{bundles_dir}/#{dir}"`
    end

    unless system("grep -q \"doc/tags\" \"#{bundles_dir}/#{dir}/.git/info/exclude\"")
        puts"  exclude #{dir}'s helptags from git..."
        open("#{bundles_dir}/#{dir}/.git/info/exclude", "a") do |f|
            f << "\ndoc/tags\n"
        end
    end

    # if submodule hasn't been initialized
    need_init = true unless system("grep -q \"#{url}\" \"#{repo_dir}/.git/config\"")
end
if need_init
    puts " initializing new submodules"
    `git submodule init`
end

puts " Updating submodule bundles..."
`git submodule update`

puts " Updating bundle help tags..."
`vim -e -c "call pathogen#helptags()" -c q`
